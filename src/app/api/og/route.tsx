export const runtime = 'nodejs';
import React from 'react';
import { ImageResponse } from 'next/og';
import type { NextRequest } from 'next/server';

export const runtime = 'edge';

const typeData: Record<string, {
  nickname: string;
  color: string;
  description: string;
  advice: string;
}> = {
  ENFJ: {
    nickname: '‰∏ª‰∫∫ÂÖ¨„Çø„Ç§„Éó',
    color: '#e6f4ea',
    description: '„ÅÇ„Å™„Åü„ÅØ‰∫∫„ÇíÂ∞é„Åè„Ç´„É™„Çπ„Éû„Å®„ÄÅÊ∑±„ÅÑÂÖ±ÊÑüÂäõ„ÇíÊåÅ„Å§„É™„Éº„ÉÄ„Éº„Åß„Åô„ÄÇ\nÂë®Âõ≤„ÇíËá™ÁÑ∂„Å´ÊÉπ„Åç„Å§„ÅëÂâçÂêë„Åç„Å™ÂΩ±Èüø„Çí‰∏é„Åà„ÇãÂ≠òÂú®„Åß„Åô„ÄÇ',
    advice: 'Ëá™ÂàÜ„ÅÆÁêÜÊÉ≥„Çí‰ø°„Åò„Å¶„ÄÅÂë®Âõ≤„ÇíÂ∞é„ÅÑ„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'
  },
  INFP: {
    nickname: '‰ª≤‰ªãËÄÖ„Çø„Ç§„Éó',
    color: '#e6f4ea',
    description: '„ÅÇ„Å™„Åü„ÅØÁπäÁ¥∞„ÅßÊÉ≥ÂÉèÂäõ„Å´ÂØå„Åø„ÄÅ\nËá™ÂàÜ„Å®‰ªñ‰∫∫„ÅÆÂøÉ„Å´Ê∑±„ÅèÂÖ±ÊÑü„Åß„Åç„ÇãÂÑ™„Åó„ÅÑ‰∫∫„Åß„Åô„ÄÇ',
    advice: 'Ëá™ÂàÜ„ÅÆÊ∞óÊåÅ„Å°„ÇíÂ§ßÂàá„Å´„Åó„Å™„Åå„Çâ„ÇÇ„ÄÅ\nÂ§ñ„ÅÆ‰∏ñÁïå„Å®„Å§„Å™„Åå„Å£„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ'
  },
  INTJ: {
    nickname: 'Âª∫ÁØâÂÆ∂„Çø„Ç§„Éó',
    color: '#ede9f5',
    description: '„ÅÇ„Å™„Åü„ÅØÊà¶Áï•ÁöÑÊÄùËÄÉ„ÇíÊåÅ„Å°„ÄÅ\nÈï∑ÊúüÁöÑ„Å™Ë¶ñÁÇπ„ÅßÁâ©‰∫ã„ÇíÊçâ„Åà„ÇãÂÜ∑Èùô„Å™ÁêÜË´ñÂÆ∂„Åß„Åô„ÄÇ',
    advice: '‰∫∫„Å®„ÅÆÂçîÂäõ„ÇíÊÅê„Çå„Åö„ÄÅ\n„Éì„Ç∏„Éß„É≥„ÇíÂÖ±Êúâ„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ'
  },
  INTP: {
    nickname: 'Ë´ñÁêÜÂ≠¶ËÄÖ„Çø„Ç§„Éó',
    color: '#ede9f5',
    description: '„ÅÇ„Å™„Åü„ÅØÁü•ÁöÑÂ•ΩÂ•áÂøÉ„ÅåÂº∑„Åè„ÄÅ\nÁã¨ÂâµÁöÑ„Å™„Ç¢„Ç§„Éá„Ç¢„ÇíÁîü„ÅøÂá∫„ÅôÂàÜÊûêÂûã„ÅÆÊé¢Ê±ÇËÄÖ„Åß„Åô„ÄÇ',
    advice: 'ÊôÇ„Å´„ÅØÁõ¥ÊÑü„ÇÑÊÑüÊÉÖ„ÇÇÂ§ßÂàá„Å´„Åó„Å¶„Åø„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'
  },
  ENTJ: {
    nickname: 'ÊåáÊèÆÂÆò„Çø„Ç§„Éó',
    color: '#ede9f5',
    description: '„ÅÇ„Å™„Åü„ÅØÂº∑„ÅÑÊÑèÂøó„Å®„É™„Éº„ÉÄ„Éº„Ç∑„ÉÉ„Éó„Åß\nÁõÆÊ®ô„ÇíÈÅîÊàê„Å∏„Å®Â∞é„ÅèÂäõÂº∑„ÅÑÊà¶Áï•ÂÆ∂„Åß„Åô„ÄÇ',
    advice: '‰ªñËÄÖ„ÅÆÊÑèË¶ã„ÇÇÂèñ„ÇäÂÖ•„Çå„Çã„Åì„Å®„Åß„ÄÅ\n„Çà„ÇäÂ§ß„Åç„Å™ÊàêÊûú„ÅåÂæó„Çâ„Çå„Åæ„Åô„ÄÇ'
  },
  ENFP: {
    nickname: 'ÈÅãÂãïÂÆ∂„Çø„Ç§„Éó',
    color: '#e6f4ea',
    description: '„ÅÇ„Å™„Åü„ÅØ„Ç®„Éç„É´„ÇÆ„ÉÉ„Ç∑„É•„ÅßÂ•ΩÂ•áÂøÉÊó∫Áõõ„ÄÇ\n‰∫∫„ÇíÊÉπ„Åç„Å§„Åë„ÇãÈ≠ÖÂäõ„ÇíÊåÅ„Å£„ÅüËá™Áî±„Å™ÂÜíÈô∫ÂÆ∂„Åß„Åô„ÄÇ',
    advice: 'ÊÄù„ÅÑ„Å§„ÅÑ„Åü„Ç¢„Ç§„Éá„Ç¢„Çí„Åæ„Åö„ÅØÂΩ¢„Å´„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ'
  },
  ISTJ: {
    nickname: 'ÁÆ°ÁêÜËÄÖ„Çø„Ç§„Éó',
    color: '#e0f0ff',
    description: '„ÅÇ„Å™„Åü„ÅØË≤¨‰ªªÊÑü„ÅåÂº∑„Åè„ÄÅ\nÊ≠£Á¢∫„Åï„Å®Áß©Â∫è„ÇíÂ§ßÂàá„Å´„Åô„ÇãÈ†º„Çå„ÇãÂÆüÂãôÂÆ∂„Åß„Åô„ÄÇ',
    advice: 'ÊüîËªüÊÄß„ÇíÊåÅ„Å§„Åì„Å®„Åß„Çà„Çä„Çπ„É†„Éº„Ç∫„Å´Áâ©‰∫ã„ÅåÈÄ≤„Åø„Åæ„Åô„ÄÇ'
  },
  ISFJ: {
    nickname: 'ÊìÅË≠∑ËÄÖ„Çø„Ç§„Éó',
    color: '#e0f0ff',
    description: '„ÅÇ„Å™„Åü„ÅØÊÄù„ÅÑ„ÇÑ„Çä„Åå„ÅÇ„Çä„ÄÅ\n‰ªñ‰∫∫„ÅÆ„Åü„ÇÅ„Å´Â∞Ω„Åè„ÅôÁåÆË∫´ÁöÑ„Å™ÊîØ„ÅàÊâã„Åß„Åô„ÄÇ',
    advice: 'Ëá™ÂàÜ„ÅÆ„Ç±„Ç¢„ÇÇÂøò„Çå„ÅöÂ§ßÂàá„Å´„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ'
  },
  ESTJ: {
    nickname: 'ÂππÈÉ®„Çø„Ç§„Éó',
    color: '#e0f0ff',
    description: '„ÅÇ„Å™„Åü„ÅØÁµÑÁπîÁöÑ„ÅßÊ±∫Êñ≠Âäõ„Åå„ÅÇ„Çä„ÄÅ\nÁèæÂÆüÁöÑ„Å´Áâ©‰∫ã„ÇíÊàê„ÅóÈÅÇ„Åí„Çã‰ø°È†º„ÅÆÂéö„ÅÑ„É™„Éº„ÉÄ„Éº„Åß„Åô„ÄÇ',
    advice: '‰∫∫„Å®„ÅÆ‰ø°È†ºÈñ¢‰øÇ„ÇíÁØâ„Åè„Åì„Å®„Åå\nÊàêÊûú„Å∏„ÅÆËøëÈÅì„Å´„Å™„Çä„Åæ„Åô„ÄÇ'
  },
  ESFJ: {
    nickname: 'È†ò‰∫ã„Çø„Ç§„Éó',
    color: '#e0f0ff',
    description: '„ÅÇ„Å™„Åü„ÅØ‰∫∫„ÇíÂ§ßÂàá„Å´„Åó„ÄÅ\nË™øÂíå„Å®ÂçîÂäõ„ÇíÈáç„Çì„Åò„ÇãÊÄù„ÅÑ„ÇÑ„Çä„ÅÆ„ÅÇ„ÇãÊîØÊè¥ËÄÖ„Åß„Åô„ÄÇ',
    advice: 'ÊôÇ„Å´„ÅØËá™ÂàÜ„ÅÆÊ∞óÊåÅ„Å°„ÇíÂÑ™ÂÖà„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ'
  },
  INFJ: {
    nickname: 'ÊèêÂî±ËÄÖ„Çø„Ç§„Éó',
    color: '#e6f4ea',
    description: '„ÅÇ„Å™„Åü„ÅØÁõ¥ÊÑü„Å®Ê∑±„ÅÑÊ¥ûÂØüÂäõ„ÇíÊåÅ„Å°„ÄÅ\nÁêÜÊÉ≥„ÇíÂÆüÁèæ„Åó„Çà„ÅÜ„Å®„Åô„ÇãÊÉÖÁÜ±ÁöÑ„Å™Â∞é„ÅçÊâã„Åß„Åô„ÄÇ',
    advice: 'ÁõÆ„ÅÆÂâç„ÅÆÂ∞è„Åï„Å™Ë°åÂãï„Åå\nÁêÜÊÉ≥„Å´Ëøë„Å•„Åè‰∏ÄÊ≠©„Å´„Å™„Çä„Åæ„Åô„ÄÇ'
  },
  ISTP: {
    nickname: 'Â∑®Âå†„Çø„Ç§„Éó',
    color: '#fff9db',
    description: '„ÅÇ„Å™„Åü„ÅØÂÆüÁî®ÁöÑ„Åã„Å§ÊüîËªü„Åß„ÄÅ\nÊâã„ÇíÂãï„Åã„Åó„Å¶ÂïèÈ°å„ÇíËß£Ê±∫„Åô„Çã„Åì„Å®„Å´Èï∑„Åë„ÅüËÅ∑‰∫∫ËÇå„Åß„Åô„ÄÇ',
    advice: '‰∏Ä„Å§„ÅÆ„Åì„Å®„Å´ÈõÜ‰∏≠„Åô„ÇãÊôÇÈñì„ÇíÂ§ßÂàá„Å´„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ'
  },
  ISFP: {
    nickname: 'ÂÜíÈô∫ÂÆ∂„Çø„Ç§„Éó',
    color: '#fff9db',
    description: '„ÅÇ„Å™„Åü„ÅØËä∏Ë°ìÁöÑÊÑüÊÄß„ÅåË±ä„Åã„Åß„ÄÅ\nËá™Áî±„Å®Áæé„Åó„Åï„ÇíËøΩ„ÅÑÊ±Ç„ÇÅ„ÇãÁπäÁ¥∞„Å™Ë°®ÁèæËÄÖ„Åß„Åô„ÄÇ',
    advice: 'Ëá™ÂàÜ„ÅÆÊÑüÊÄß„Çí‰ø°„Åò„Å¶Ë°åÂãï„Å´Áßª„Åó„Å¶„Åø„Åæ„Åó„Çá„ÅÜ„ÄÇ'
  },
  ESTP: {
    nickname: 'Ëµ∑Ê•≠ÂÆ∂„Çø„Ç§„Éó',
    color: '#fff9db',
    description: '„ÅÇ„Å™„Åü„ÅØÂ§ßËÉÜ„ÅßÁ§æ‰∫§ÁöÑ„ÄÇ\nË°åÂãïÂäõ„Å®Âç≥ËààÂäõ„Å´ÂÑ™„Çå„ÅüÁèæÂ†¥„ÅÆÊåáÊèÆÂÆò„Åß„Åô„ÄÇ',
    advice: 'Ë°åÂãï„ÅÆÂâç„Å´‰∏ÄÂëºÂê∏ÁΩÆ„Åè„Åì„Å®„Åß\nÊàêÂäü„ÅÆÁ¢∫Áéá„ÅåÈ´ò„Åæ„Çä„Åæ„Åô„ÄÇ'
  },
  ESFP: {
    nickname: '„Ç®„É≥„Çø„Éº„ÉÜ„Ç§„Éä„Éº„Çø„Ç§„Éó',
    color: '#fff9db',
    description: '„ÅÇ„Å™„Åü„ÅØÊòé„Çã„Åè„Å¶‰∫∫Êáê„Å£„Åì„Åè„ÄÅ\nÂ†¥„ÇíÁõõ„Çä‰∏ä„Åí„Çã„Åì„Å®„ÅåÂæóÊÑè„Å™„É†„Éº„Éâ„É°„Éº„Ç´„Éº„Åß„Åô„ÄÇ',
    advice: 'Ê≥®ÁõÆ„ÇíÈõÜ„ÇÅ„Å™„Åå„Çâ„ÇÇ\nÂë®Âõ≤„ÅÆÂ£∞„Å´„ÇÇËÄ≥„ÇíÂÇæ„Åë„Åæ„Åó„Çá„ÅÜ„ÄÇ'
  },
  ENTP: {
    nickname: 'Ë®éË´ñËÄÖ„Çø„Ç§„Éó',
    color: '#ede9f5',
    description: '„ÅÇ„Å™„Åü„ÅØÊ©üËª¢„ÅåÂà©„Åç„ÄÅ\nÊüîËªü„Å™ÊÄùËÄÉÂäõ„ÅßÊñ∞„Åó„ÅÑ„Ç¢„Ç§„Éá„Ç¢„ÇíÁîü„ÅøÂá∫„ÅôÁô∫ÊòéÂÆ∂„Åß„Åô„ÄÇ',
    advice: 'Ë≠∞Ë´ñ„Çà„Çä„ÇÇË°åÂãï„Åß‰ø°È†º„ÇíÂæó„Çã„Åì„Å®„ÇÇÂ§ßÂàá„Åß„Åô„ÄÇ'
  },
};

export async function GET(req: NextRequest) {
  const fontData = await fetch(
    new URL('../../../assets/NotoSansJP-Bold.ttf', import.meta.url)
  ).then((res) => res.arrayBuffer());

  const { searchParams } = new URL(req.url);
  const type = searchParams.get('type')?.toUpperCase() || 'ENFJ';
  const info = typeData[type] || typeData['ENFJ'];
  const host = req.headers.get('host') || 'localhost:3000';
  const imageUrl = `http://${host}/images/mbti/${type}.png`;

  return new ImageResponse(
    (
      <div
        style={{
          width: '1024px',
          height: '512px',
          backgroundColor: info.color,
          display: 'flex',
          flexDirection: 'row',
          fontFamily: 'NotoSansJP',
        }}
      >
        <img
          src={imageUrl}
          alt={type}
          style={{ width: '50%', height: '100%', objectFit: 'contain' }}
        />
        <div
          style={{
            padding: '30px 20px',
            display: 'flex',
            flexDirection: 'column',
            justifyContent: 'center',
          }}
        >
          <h1
            style={{
              fontSize: 48,
              margin: '0 0 12px 0',
              color: '#2f855a',
            }}
          >
            {type}
          </h1>
          <p
            style={{
              fontSize: 28,
              margin: '0 0 12px 0',
              color: '#2f855a',
            }}
          >
            {info.nickname}
          </p>
          <p
            style={{
              fontSize: 22,
              color: '#333',
              lineHeight: 1.5,
              whiteSpace: 'pre-wrap',
              maxWidth: 420,
            }}
          >
            {info.description}
          </p>
          <p
            style={{
              fontSize: 18,
              marginTop: 16,
              color: '#4a4a4a',
            }}
          >
            üéØ „Ç¢„Éâ„Éê„Ç§„ÇπÔºö{info.advice}
          </p>
        </div>
      </div> 
    ),
    {
      width: 1024,
      height: 512,
      fonts: [
        {
          name: 'NotoSansJP',
          data: fontData,
          style: 'normal',
        },
      ],
    }
  );
}